---
import { UI } from '@/consts';
---

<script is:inline defer define:vars={{ defaultTheme: UI.theme }}>
	// Theme
	function setDarkMode(document) {
		const getThemePreference = () => {
			if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
				return localStorage.getItem('theme');
			}
			const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
			return defaultTheme === 'system' ? systemTheme : defaultTheme;
		};
		const isDark = getThemePreference() === 'dark';
		document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

		if (typeof localStorage !== 'undefined') {
			const observer = new MutationObserver(() => {
				const isDark = document.documentElement.classList.contains('dark');
				localStorage.setItem('theme', isDark ? 'dark' : 'light');
			});
			observer.observe(document.documentElement, {
				attributes: true,
				attributeFilter: ['class'],
			});
		}
	}

	setDarkMode(document);

	document.addEventListener('astro:before-swap', (ev) => {
		// Pass the incoming document to set the theme on it
		setDarkMode(ev.newDocument);
	});
</script>
